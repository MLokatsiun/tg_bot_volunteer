from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import ContextTypes, ConversationHandler, CommandHandler, MessageHandler, CallbackQueryHandler, filters
from services.api_client import login_moderator
from decouple import config
ENTER_MODERATOR_CREDENTIALS, MODERATOR_AUTH_COMPLETE = range(2)


CLIENT_NAME = config("CLIENT_NAME")
CLIENT_PASSWORD = config("CLIENT_PASSWORD")


def get_main_menu_keyboard():
    return ReplyKeyboardMarkup([
        [KeyboardButton("–ó–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—è"), KeyboardButton("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è")],
        [KeyboardButton("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞")]
    ], resize_keyboard=True, one_time_keyboard=True)

async def start_moderator_auth(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–ü–æ—á–∞—Ç–æ–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞."""
    keyboard = [[KeyboardButton("–°–∫–∞—Å—É–≤–∞—Ç–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—é")]]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True, one_time_keyboard=True)
    await update.message.reply_text("–í–≤–µ–¥—ñ—Ç—å –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É (–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞) –≤ —Ñ–æ—Ä–º–∞—Ç—ñ '380958205750':", reply_markup=reply_markup)
    return ENTER_MODERATOR_CREDENTIALS


async def enter_moderator_credentials(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û—Ç—Ä–∏–º–∞–Ω–Ω—è –æ–±–ª—ñ–∫–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ —Ç–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó."""
    if "phone_number" not in context.user_data:
        context.user_data["phone_number"] = update.message.text.strip()
        keyboard = [[KeyboardButton("–°–∫–∞—Å—É–≤–∞—Ç–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—é")]]
        reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True, one_time_keyboard=True)
        await update.message.reply_text("–í–≤–µ–¥—ñ—Ç—å –≤–∞—à –ø–∞—Ä–æ–ª—å:", reply_markup=reply_markup)
        return ENTER_MODERATOR_CREDENTIALS
    else:
        context.user_data["password"] = update.message.text.strip()

    login_request = {
        "phone_number": context.user_data["phone_number"],
        "password": context.user_data["password"],
        "client": CLIENT_NAME,
        "client_password": CLIENT_PASSWORD
    }

    try:
        response = await login_moderator(login_request)
        access_token = response["access_token"]
        refresh_token = response["refresh_token"]

        context.user_data["access_token"] = access_token
        context.user_data["refresh_token"] = refresh_token

        await update.message.reply_text(
            "–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–∞! üéâ –í–∏ —É–≤—ñ–π—à–ª–∏ —è–∫ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä.",
        )

        await moderator_main_menu(update, context)

        return ConversationHandler.END
    except ValueError as e:
        await update.message.reply_text(f"–ü–æ–º–∏–ª–∫–∞ –¥–∞–Ω–∏—Ö: {str(e)}. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.")
        keyboard = [[KeyboardButton("–°–∫–∞—Å—É–≤–∞—Ç–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—é")]]
        reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True, one_time_keyboard=True)
        await update.message.reply_text("–í–≤–µ–¥—ñ—Ç—å –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É (–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞) –≤ —Ñ–æ—Ä–º–∞—Ç—ñ '380958205750':", reply_markup=reply_markup)
        return ENTER_MODERATOR_CREDENTIALS
    except PermissionError as e:
        await update.message.reply_text(f"–î–æ—Å—Ç—É–ø –∑–∞–±–æ—Ä–æ–Ω–µ–Ω–æ: {str(e)}. –ó–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
        await update.message.reply_text("–ó–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è –≤–∏—Ä—ñ—à–µ–Ω–Ω—è —Ü—ñ—î—ó –ø—Ä–æ–±–ª–µ–º–∏.")
        await update.message.reply_text("–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é:", reply_markup=get_main_menu_keyboard())
        return ConversationHandler.END
    except Exception as e:
        print(f"Unexpected error: {str(e)}")  # –õ–æ–≥—É–≤–∞–Ω–Ω—è
        await update.message.reply_text(f"–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞: {str(e)}. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.")
        await update.message.reply_text("–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é:", reply_markup=get_main_menu_keyboard())
        return ConversationHandler.END


async def moderator_main_menu(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞."""
    keyboard = [
        [KeyboardButton("–î–æ–¥–∞—Ç–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é")],
        [KeyboardButton("–í–∏–¥–∞–ª–∏—Ç–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é")],
        [KeyboardButton("–í–∏–¥–∞–ª–∏—Ç–∏ –∑–∞—è–≤–∫—É")],
        [KeyboardButton("–ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞")],
        [KeyboardButton("–í–∏—Ö—ñ–¥")]
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True, one_time_keyboard=True)
    await update.message.reply_text("–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞:", reply_markup=reply_markup)



async def cancel_moderator_auth(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–°–∫–∞—Å—É–≤–∞–Ω–Ω—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞."""

    if update.message.text == "–°–∫–∞—Å—É–≤–∞—Ç–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—é":
        await update.message.reply_text("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—é —Å–∫–∞—Å–æ–≤–∞–Ω–æ.")
        await update.message.reply_text("–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é:", reply_markup=get_main_menu_keyboard())
        return ConversationHandler.END


moderator_auth_handler = ConversationHandler(
    entry_points=[MessageHandler(filters.Regex("^–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞$"), start_moderator_auth)],
    states={
        ENTER_MODERATOR_CREDENTIALS: [
            MessageHandler(filters.TEXT & ~filters.COMMAND & ~filters.Regex("^–°–∫–∞—Å—É–≤–∞—Ç–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—é$"), enter_moderator_credentials),
            MessageHandler(filters.Regex("^–°–∫–∞—Å—É–≤–∞—Ç–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—é$"), cancel_moderator_auth)
        ],
    },
    fallbacks=[CommandHandler("cancel", cancel_moderator_auth), MessageHandler(filters.Regex("^–°–∫–∞—Å—É–≤–∞—Ç–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—é$"), cancel_moderator_auth)],
)
